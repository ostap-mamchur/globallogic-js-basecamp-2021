{"version":3,"sources":["constants.js","components/Users/constants.js","components/Users/UsersTable/Actions/index.jsx","components/Users/UserForm/converter.js","api/utisl.js","api/userApi/index.js","redux/usersSlice.js","components/Users/UsersTable/index.jsx","common/Formik/Input/index.jsx","components/Users/UserForm/FormContainer/Buttons/index.jsx","common/Formik/Select/index.jsx","components/Users/UserForm/FormContainer/index.jsx","redux/rolesSlice.jsx","components/Users/UserForm/index.jsx","components/NotFound/index.jsx","components/Users/index.jsx","components/Sidebar/index.jsx","redux/todosSlice.js","components/Todos/TodosList/TodoItem/TodoItem.jsx","components/Todos/TodosList/TodosList.jsx","components/Todos/AddTodoForm/AddTodoForm.jsx","components/Todos/Todos.jsx","components/App/index.jsx","components/Root/index.jsx","redux/store.js","index.js"],"names":["MODE","USERNAME","ROLE","AGE","INITIAL_STATE","Actions","id","url","useRouteMatch","history","useHistory","redirect","mode","push","className","onClick","numberParse","str","String","padStart","initialId","getDate","millisecond","date","Date","getFullYear","getMonth","getHours","getMinutes","wait","ms","Promise","resolve","setTimeout","getTimestamp","now","throwError","Error","getId","data","length","api","getUsers","console","log","getUser","user","find","u","createUser","newUser","timestamp","editUser","index","findIndex","deleteUser","getRoles","ROLES","fetchUsers","createAsyncThunk","a","users","fetchUser","addNewUser","initialUser","updateUser","usersSlice","createSlice","name","initialState","status","error","reducers","extraReducers","pending","state","action","fulfilled","concat","payload","rejected","username","age","role","filter","UsersTable","content","dispatch","useDispatch","useSelector","usersStatus","useEffect","to","map","Input","label","validate","type","disabled","required","checked","useField","value","field","component","Buttons","useFormikContext","values","isSubmitting","window","alert","message","Select","options","option","FormContainer","initialValues","onSubmit","roles","fetchRoles","rolesSlice","UserForm","useParams","rolesStatus","handleSubmit","getInitialValues","NotFound","Users","path","exact","Sidebar","activeClassName","todosSlice","todos","addTodo","nanoid","text","isComleted","removeTodo","todo","toggleTodo","actions","selectAllTodos","TodoItem","e","style","textDecoration","TodosList","renderedTodo","AddTodoForm","useState","setText","canSave","Boolean","htmlFor","onChange","target","cols","rows","Todos","App","from","Root","children","basename","store","configureStore","reducer","todosReducer","usersReducer","rolesReducer","middleware","getDefaultMiddleware","logger","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.7ec7825d.chunk.js","sourcesContent":["export const MODE = {\r\n  VIEW: 'view',\r\n  CREATE: 'create',\r\n  EDIT: 'edit',\r\n  CLONE: 'clone',\r\n  DELETE: 'delete'\r\n};\r\n","export const ID = 'id';\r\nexport const USERNAME = 'username';\r\nexport const ROLE = 'role';\r\nexport const TIMESTAMP = 'timestamp';\r\nexport const AGE = 'age';\r\n\r\nexport const INITIAL_STATE = {\r\n  [USERNAME]: '',\r\n  [AGE]: 0,\r\n  [ROLE]: 'user',\r\n};\r\n","import { useRouteMatch, useHistory } from 'react-router-dom';\r\n\r\nimport { MODE } from '../../../../constants';\r\n\r\nfunction Actions({ id }) {\r\n  const { url } = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  const redirect = mode => () => {\r\n    history.push(`${url}/user/${mode}/${id}`);\r\n  };\r\n\r\n  return (\r\n    <div className='Actions'>\r\n      <button onClick={redirect(MODE.VIEW)}>View</button>\r\n      {' '}\r\n      <button onClick={redirect(MODE.EDIT)}>Edit</button>\r\n      {' '}\r\n      <button onClick={redirect(MODE.CLONE)}>Clone</button>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Actions;\r\n","import { INITIAL_STATE } from '../constants';\r\n\r\nexport const getInitialValues = user => (user ? ({\r\n    ...user,\r\n    // age: +user.age\r\n}) : INITIAL_STATE);\r\n\r\nexport const getRequestPayload = values => values;\r\n\r\nfunction numberParse(str) {\r\n    str = String(str);\r\n    return str.padStart(2, \"0\");\r\n}\r\n\r\nexport const getDate = millisecond => {\r\n    const date = new Date(millisecond);\r\n    return `${date.getFullYear()}-${numberParse(date.getMonth() + 1)}-${numberParse(date.getDate())} ${numberParse(date.getHours())}:${numberParse(date.getMinutes())}`\r\n}\r\n","export const wait = (ms = 800) =>\r\n  new Promise(resolve => {\r\n    setTimeout(resolve, ms);\r\n  });\r\n\r\nexport const createGetId = initialId => () => ++initialId;\r\n\r\nexport const getTimestamp = () => Date.now();\r\n\r\nexport const throwError = id => {\r\n  throw new Error(`Record with ID ${id} does not exist`);\r\n};\r\n","import { wait, createGetId, getTimestamp, throwError } from '../utisl';\r\nimport data from './db';\r\n\r\nconst getId = createGetId(data.length);\r\n\r\nconst api = {\r\n  // GET /users\r\n  async getUsers() {\r\n    await wait(1000);\r\n\r\n    console.log('GET /users', data);\r\n    return data;\r\n  },\r\n  // GET /users/:id\r\n  async getUser(id) {\r\n    await wait();\r\n\r\n    const user = data.find(u => u.id === id);\r\n\r\n    if (user) {\r\n      console.log(`GET /users/${user.id}`, user);\r\n      return user;\r\n    } else {\r\n      throwError(id);\r\n    }\r\n  },\r\n  // POST /users\r\n  async createUser(user) {\r\n    await wait();\r\n\r\n    const newUser = {\r\n      ...user,\r\n      id: getId(),\r\n      timestamp: getTimestamp(),\r\n    };\r\n\r\n    data.push(newUser);\r\n\r\n    console.log('POST /users', newUser);\r\n    return newUser;\r\n  },\r\n  // PUT /users\r\n  async editUser(user) {\r\n    await wait();\r\n\r\n    const index = data.findIndex(u => u.id === user.id);\r\n\r\n    if (~index) {\r\n      data[index] = {\r\n        ...user,\r\n        timestamp: getTimestamp(),\r\n      };\r\n\r\n      console.log('PUT /users', data[index]);\r\n      return data[index];\r\n    } else {\r\n      throwError(user.id);\r\n    }\r\n  },\r\n  // DELETE /users\r\n  async deleteUser(user) {\r\n    await wait();\r\n\r\n    const index = data.findIndex(u => u.id === user.id);\r\n\r\n    if (~index) {\r\n      console.log('DELETE /users', user);\r\n      return data[index]\r\n    } else {\r\n      throwError(user.id);\r\n    }\r\n  },\r\n  // GET /roles\r\n  async getRoles() {\r\n    await wait();\r\n    const ROLES = ['user', 'super-user', 'admin'];\r\n\r\n    console.log('GET /roles', ROLES);\r\n    return ROLES;\r\n  },\r\n};\r\n\r\nexport default api;\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport api from '../api/userApi';\r\n\r\nconst initialState = {\r\n  users: [],\r\n  status: \"idle\",\r\n  error: null\r\n};\r\n\r\nexport const fetchUsers = createAsyncThunk(\r\n  \"users/fetchUsers\",\r\n  async () => {\r\n    const users = await api.getUsers();\r\n    return users;\r\n  }\r\n);\r\n\r\nexport const fetchUser = createAsyncThunk(\r\n  \"users/fetchUser\",\r\n  async id => {\r\n    const user = await api.getUser(id);\r\n    return user;\r\n  }\r\n);\r\n\r\nexport const addNewUser = createAsyncThunk(\r\n  \"users/addNewUser\",\r\n  async initialUser => {\r\n    const user = await api.createUser(initialUser);\r\n    return user;\r\n  }\r\n)\r\n\r\nexport const updateUser = createAsyncThunk(\r\n  \"users/updateUser\",\r\n  async initialUser => {\r\n    const user = await api.editUser(initialUser);\r\n    return user;\r\n  }\r\n);\r\n\r\nexport const deleteUser = createAsyncThunk(\r\n  \"users/deleteUser\",\r\n  async initialUser => {\r\n    const user = await api.deleteUser(initialUser);\r\n    return user;\r\n  }\r\n)\r\n\r\nconst usersSlice = createSlice({\r\n  name: \"users\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [fetchUsers.pending]: (state, action) => {\r\n      state.status = \"loading\";\r\n    },\r\n    [fetchUsers.fulfilled]: (state, action) => {\r\n      state.status = \"succeeded\"\r\n      state.users = state.users.concat(action.payload);\r\n    },\r\n    [fetchUsers.rejected]: (state, action) => {\r\n      state.status = \"failed\";\r\n      state.error = action.payload;\r\n    },\r\n /*   [fetchUser.fulfilled]: (state, action) => {\r\n\r\n    },*/\r\n    [addNewUser.fulfilled]: (state, action) => {\r\n      state.users.push(action.payload);\r\n    },\r\n    [updateUser.fulfilled]: (state, action) => {\r\n      const { id, username, age, role, timestamp } = action.payload;\r\n      const user = state.users.find(user => user.id == id);\r\n      if (user) {\r\n        user.username = username;\r\n        user.age = age;\r\n        user.role = role;\r\n        user.timestamp = timestamp;\r\n      }\r\n    },\r\n    [deleteUser.fulfilled]: (state, action) => {\r\n      const { id } = action.payload;\r\n      state.users = state.users.filter(user => user.id !== id);\r\n    }\r\n  }\r\n});\r\n\r\nexport default usersSlice.reducer;","import { useEffect } from 'react';\r\nimport { useRouteMatch, Link } from 'react-router-dom';\r\n\r\nimport { MODE } from '../../../constants';\r\nimport { ID, USERNAME, ROLE, TIMESTAMP, AGE } from '../constants';\r\nimport Actions from './Actions';\r\nimport './index.scss';\r\nimport { getDate } from '../UserForm/converter';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchUsers } from '../../../redux/usersSlice';\r\n\r\nfunction UsersTable() {\r\n  const dispatch = useDispatch();\r\n  const users = useSelector(state => state.users.users);\r\n\r\n  const { url } = useRouteMatch();\r\n\r\n  const usersStatus = useSelector(state => state.users.status);\r\n  const error = useSelector(state => state.users.error);\r\n\r\n  useEffect(() => {\r\n    if (usersStatus === 'idle') {\r\n      dispatch(fetchUsers());\r\n    }\r\n  }, [usersStatus, dispatch]);\r\n\r\n  let content;\r\n\r\n\r\n  if (usersStatus === \"loading\") {\r\n    content = <div className=\"loader\">Loading...</div>\r\n  } else if (usersStatus === \"succeeded\") {\r\n    content = (\r\n      <div className='UsersTable'>\r\n        <Link to={`${url}/user/${MODE.CREATE}`}>Create User</Link>\r\n\r\n        <table>\r\n          <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Username</th>\r\n            <th>Age</th>\r\n            <th>Role</th>\r\n            <th>Last Updated At</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          {users.map(user => (\r\n            <tr key={user[ID]}>\r\n              <td>{user[ID]}</td>\r\n              <td>{user[USERNAME]}</td>\r\n              <td>{user[AGE]}</td>\r\n              <td>{user[ROLE]}</td>\r\n              <td>{getDate(user[TIMESTAMP])}</td>\r\n              <td>\r\n                <Actions id={user[ID]} />\r\n              </td>\r\n            </tr>\r\n          ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  } else if (usersStatus === 'failed') {\r\n    content = <div>{error}</div>\r\n  }\r\n\r\n  return (\r\n    <div className=\"Users\">{content}</div>\r\n  );\r\n}\r\n\r\nexport default UsersTable;\r\n","import {useField, ErrorMessage} from 'formik';\r\nimport './styles.scss';\r\n\r\nfunction Input({name, label, validate, type = 'text', disabled = false, required, checked = false}) {\r\n\r\n    const validateInput = value => {\r\n        if (required && value === \"\") {\r\n            return \"Required\";\r\n        } if (typeof validate === \"function\") {\r\n            return validate(value);\r\n        }\r\n    }\r\n\r\n    const [field] = useField({name, validate: validateInput});\r\n    return (\r\n        <div className=\"Input\">\r\n            <label>\r\n                <div>{label}{required && \"*\"}</div>\r\n                <input type={type} disabled={disabled} {...field} checked={checked}/>\r\n            </label>\r\n\r\n            <ErrorMessage name={name} className=\"error\" component=\"div\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Input;\r\n","import { useHistory } from 'react-router-dom';\r\nimport { useFormikContext } from 'formik';\r\n\r\nimport { MODE } from '../../../../../constants';\r\nimport api from '../../../../../api/userApi';\r\nimport { getRequestPayload } from '../../converter';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteUser } from '../../../../../redux/usersSlice';\r\n\r\nfunction Buttons({ mode }) {\r\n  const history = useHistory();\r\n  const { values, isSubmitting } = useFormikContext();\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div>\r\n      {(mode === MODE.CREATE || mode === MODE.EDIT || mode === MODE.CLONE) && (\r\n        <button type='submit' disabled={isSubmitting}>\r\n          Save\r\n        </button>\r\n      )}\r\n      {(mode === MODE.EDIT && (\r\n        <button type='reset' onClick={async () => {\r\n          try {\r\n            const payload = getRequestPayload(values);\r\n            await dispatch(deleteUser(payload));\r\n          } catch (err) {\r\n            window.alert(err.message);\r\n          }\r\n\r\n          history.push('/users');\r\n        }}>\r\n          Delete\r\n        </button>\r\n      ))}\r\n      <button type='button' onClick={() => history.push('/users')}>\r\n        Cancel\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Buttons;\r\n","import {ErrorMessage, useField} from \"formik\";\r\n\r\n\r\nfunction Select({ label, name, disabled, validate, options, required }) {\r\n\r\n    const validateInput = value => {\r\n        if (required && value === \"\") {\r\n            return \"Required\";\r\n        } if (typeof validate === \"function\") {\r\n            return validate(value);\r\n        }\r\n    }\r\n\r\n    const [field] = useField({name, validate: validateInput});\r\n    return (\r\n        <div className=\"Select\">\r\n            <label>\r\n                <div>{label}{required && \"*\"}</div>\r\n                <select disabled={disabled} {...field}>\r\n                    {options.map((option, index) => (<option key={index} label={option.label}>{option.value}</option>))}\r\n                </select>\r\n            </label>\r\n            <ErrorMessage name={name} className=\"error\" component=\"div\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Select;","import { Formik, Form } from 'formik';\r\n\r\nimport Input from '../../../../common/Formik/Input';\r\nimport { MODE } from '../../../../constants';\r\nimport { AGE, ROLE, USERNAME } from '../../constants';\r\nimport Buttons from './Buttons';\r\nimport Select from '../../../../common/Formik/Select';\r\n\r\nfunction FormContainer({ initialValues, onSubmit, mode, roles }) {\r\n  return (\r\n    <Formik initialValues={initialValues} onSubmit={onSubmit}>\r\n      <Form>\r\n        <Input name={USERNAME} label='Username' disabled={mode === MODE.VIEW} required={true} />\r\n        <Input\r\n          name={AGE}\r\n          type='number'\r\n          label='Age'\r\n          disabled={mode === MODE.VIEW}\r\n          required={true}\r\n          validate={value => {\r\n            if (value < 16 || value > 110) {\r\n              return `Age is not appropriate`;\r\n            }\r\n          }}\r\n        />\r\n        <Select\r\n          label='Role'\r\n          name={ROLE}\r\n          disabled={mode === MODE.VIEW}\r\n          options={roles.map(role => ({ label: role, value: role }))}\r\n        />\r\n        <br />\r\n        <Buttons mode={mode} />\r\n      </Form>\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default FormContainer;\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport api from '../api/userApi';\r\n\r\nconst initialState = {\r\n  roles: [],\r\n  status: \"idle\",\r\n  error: null\r\n};\r\n\r\nexport const fetchRoles = createAsyncThunk(\r\n  \"roles/fetchRoles\",\r\n  async () => {\r\n    const roles = await api.getRoles();\r\n    return roles;\r\n  }\r\n);\r\n\r\nconst rolesSlice = createSlice({\r\n  name: \"roles\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [fetchRoles.pending]: (state, action) => {\r\n      state.status = \"loading\";\r\n    },\r\n    [fetchRoles.fulfilled]: (state, action) => {\r\n      state.status = \"succeeded\"\r\n      state.roles = state.roles.concat(action.payload);\r\n    }\r\n  }\r\n});\r\n\r\nexport default rolesSlice.reducer;","import { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\nimport userApi from '../../../api/userApi';\r\nimport { MODE } from '../../../constants';\r\nimport { ID } from '../constants';\r\nimport FormContainer from './FormContainer';\r\nimport { getInitialValues, getRequestPayload } from './converter';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addNewUser, fetchUser, updateUser } from '../../../redux/usersSlice';\r\nimport { fetchRoles } from '../../../redux/rolesSlice';\r\n\r\nfunction UserForm() {\r\n  const { mode, id } = useParams();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const user = useSelector(state =>\r\n    state.users.users.find(user => user.id == id));\r\n\r\n  useEffect(() => {\r\n    if (mode === MODE.VIEW || mode === MODE.EDIT || mode === MODE.CLONE) {\r\n      if (!user) {\r\n        dispatch(fetchUser(id));\r\n      }\r\n    }\r\n  }, [id, mode, user, dispatch]);\r\n\r\n  const roles = useSelector(state => state.roles.roles);\r\n  const rolesStatus = useSelector(state => state.roles.status);\r\n  useEffect(() => {\r\n    if (rolesStatus === 'idle') {\r\n      dispatch(fetchRoles());\r\n    }\r\n  }, [dispatch, roles]);\r\n\r\n  const handleSubmit = async values => {\r\n    try {\r\n      const payload = getRequestPayload(values);\r\n      debugger;\r\n      switch (mode) {\r\n        case MODE.CREATE:\r\n        case MODE.CLONE:\r\n          await dispatch(addNewUser(payload));\r\n          break;\r\n        case MODE.EDIT:\r\n          await dispatch(updateUser(payload));\r\n          break;\r\n        default:\r\n          console.error(`Failed to execute this request for ${mode} mode`);\r\n      }\r\n    } catch (err) {\r\n      window.alert(err.message);\r\n    }\r\n\r\n    history.push('/users');\r\n  };\r\n\r\n  const initialValues = getInitialValues(user);\r\n  return (\r\n    <FormContainer\r\n      key={`${mode}:${initialValues[ID]}`}\r\n      initialValues={initialValues}\r\n      onSubmit={handleSubmit}\r\n      mode={mode}\r\n      roles={roles}\r\n    />\r\n  );\r\n}\r\n\r\nexport default UserForm;\r\n","import \"./styles.css\";\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <div className=\"NotFound\">\r\n      <h1>Not Found</h1>\r\n      <p>404</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;","import { useState } from 'react';\r\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\r\n\r\nimport { MODE } from '../../constants';\r\nimport UsersTable from './UsersTable';\r\nimport UserForm from './UserForm';\r\nimport NotFound from '../NotFound';\r\n\r\nfunction Users() {\r\n  const { path } = useRouteMatch();\r\n\r\n  return (\r\n    <div className=\"users\">\r\n      <Switch>\r\n        <Route exact path={path}>\r\n          <UsersTable />\r\n        </Route>\r\n        <Route\r\n          exact\r\n          path={`${path}/user/:mode(${MODE.VIEW}|${MODE.CREATE}|${MODE.EDIT}|${MODE.CLONE})/:id?`}\r\n        >\r\n          <UserForm />\r\n        </Route>\r\n        <Route>\r\n          <NotFound />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Users;\r\n","import { NavLink } from 'react-router-dom';\r\nimport './styles.css';\r\n\r\nfunction Sidebar() {\r\n  return (\r\n    <nav className='Sidebar'>\r\n      <ul>\r\n        <li><NavLink className='Item' activeClassName='Active' to='/users'>Users</NavLink></li>\r\n        <li><NavLink className='Item' activeClassName='Active' to='/todos'>Todos</NavLink></li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Sidebar;","import { createSlice, nanoid } from '@reduxjs/toolkit';\r\n\r\n\r\nconst todosSlice = createSlice({\r\n  name: 'todos',\r\n  initialState: {\r\n    todos: []\r\n  },\r\n  reducers: {\r\n    addTodo(state, action) {\r\n      state.todos.push({\r\n        id: nanoid(),\r\n        text: action.payload.text,\r\n        isComleted: false\r\n      });\r\n    },\r\n    removeTodo(state, action) {\r\n      state.todos = state.todos.filter(todo =>\r\n        todo.id != action.payload.id);\r\n    },\r\n    toggleTodo(state, action) {\r\n      const todo = state.todos.find(todo => todo.id == action.payload.id);\r\n      todo.isComleted = !todo.isComleted;\r\n    }\r\n  }\r\n});\r\n\r\nexport default todosSlice.reducer;\r\n\r\nexport const { addTodo, removeTodo, toggleTodo } = todosSlice.actions;\r\n\r\nexport const selectAllTodos = state => state.todos.todos;","import { useDispatch } from 'react-redux';\r\nimport { removeTodo, toggleTodo } from '../../../../redux/todosSlice';\r\n\r\nfunction TodoItem({ text, id, isComleted }) {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleTodoDeleteClick = e => {\r\n    dispatch(removeTodo({ id }));\r\n  }\r\n  const handleTodoCompletedClick = e => {\r\n    dispatch(toggleTodo({ id }))\r\n  }\r\n\r\n  return (\r\n    <li onClick={handleTodoCompletedClick}>\r\n      <span style={{ textDecoration: isComleted ? 'line-through' : 'auto' }}>{text}</span>{\" \"}\r\n      <button onClick={handleTodoDeleteClick}>delete</button>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default TodoItem;","import { useSelector } from 'react-redux';\r\nimport { selectAllTodos } from '../../../redux/todosSlice';\r\nimport TodoItem from './TodoItem/TodoItem';\r\n\r\nfunction TodosList() {\r\n  const todos = useSelector(selectAllTodos);\r\n\r\n  const renderedTodo = todos.map(todo => (\r\n    <TodoItem key={todo.id} {...todo} />\r\n  ));\r\n\r\n  return (\r\n    <ul>{renderedTodo}</ul>\r\n  );\r\n}\r\n\r\nexport default TodosList;","import { Formik, Form } from 'formik';\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addTodo } from '../../../redux/todosSlice';\r\n\r\nfunction AddTodoForm() {\r\n  const [text, setText] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const handleTextChange = e => setText(e.target.value);\r\n  const canSave = Boolean(text);\r\n  const handleSaveTodoClick = e => {\r\n    dispatch(addTodo({ text }));\r\n    setText(\"\");\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Add a new todo</h2>\r\n      <form>\r\n        <label htmlFor='todoText'>Todo text:</label>\r\n        <textarea\r\n          name='todoText'\r\n          id='todoText'\r\n          onChange={handleTextChange}\r\n          value={text}\r\n          cols='30'\r\n          rows='1'\r\n        />\r\n        <button onClick={handleSaveTodoClick} type='button' disabled={!canSave}>Save todo</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddTodoForm;","import TodosList from './TodosList/TodosList';\r\nimport AddTodoForm from './AddTodoForm/AddTodoForm';\r\n\r\nfunction Todos() {\r\n  return (\r\n    <div>\r\n      <AddTodoForm />\r\n      <TodosList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todos;","import { Switch, Redirect, Route } from 'react-router-dom';\r\nimport './App.css';\r\nimport Users from '../Users';\r\nimport Sidebar from '../Sidebar';\r\nimport NotFound from '../NotFound';\r\nimport Todos from '../Todos/Todos';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='App'>\r\n      <Sidebar />\r\n      <div className='content'>\r\n        <Switch>\r\n          <Redirect exact from='/' to='/users' />\r\n\r\n          <Route path='/users'>\r\n            <Users />\r\n          </Route>\r\n          <Route path=\"/todos\">\r\n            <Todos />\r\n          </Route>\r\n          <Route>\r\n            <NotFound/>\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nfunction Root({ children }) {\r\n  return (\r\n    <Router basename=\"/globallogic-js-basecamp-2021/react/03-react-router-formik/build\">\r\n      {children}\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Root;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport todosReducer from './todosSlice';\r\nimport { logger } from 'redux-logger/src';\r\nimport usersReducer from './usersSlice';\r\nimport rolesReducer from './rolesSlice';\r\n\r\nconst store = configureStore({\r\n reducer: {\r\n  todos: todosReducer,\r\n  users: usersReducer,\r\n  roles: rolesReducer\r\n },\r\n middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\r\n});\r\n\r\nexport default store;","import { StrictMode } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\nimport Root from './components/Root';\r\nimport './styles.css';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nconst rootElement = document.getElementById('root');\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <Root>\r\n      <Provider store={store}>\r\n      <App />\r\n      </Provider>\r\n    </Root>\r\n  </StrictMode>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}