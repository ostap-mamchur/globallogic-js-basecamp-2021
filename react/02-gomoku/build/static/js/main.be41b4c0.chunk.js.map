{"version":3,"sources":["components/Game/Game.module.css","components/Game/Board/Square/Square.module.css","components/Game/Info/Steps/Steps.module.css","components/Game/Board/Board.module.css","components/Game/Info/Info.module.css","components/Game/Info/Status/Status.module.css","logo.svg","components/Game/Board/Square/Square.jsx","components/Game/Board/Board.jsx","components/Game/Info/Steps/Steps.jsx","components/Game/Info/Status/Status.jsx","components/Game/Info/Info.jsx","utils/calculateWinner.js","components/Game/Game.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Square","props","winning","isWinning","current","isCurrent","className","styles","square","onClick","value","Board","board","board__grid","squares","map","row","i","j","currentCoord","winningComb","has","Steps","useState","isGrowth","setIsGrowth","moves","history","step","move","desc","jumpTo","reverse","steps","steps__toggle","steps__list","Status","status","Info","info","concat","set1","set2","el","add","Game","Array","fill","setHistory","numberStep","setNumberStep","prev","coord","currentSquares","prevSquares","length","findCurrentElement","Set","symbol","verticalWinningComb","horizontalWinningComb","mainDiagWinningComb","count","sideDiagWinningComb","isFull","size","calculateWinner","game","game__board","newHistory","slice","handleClick","game__info","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be41b4c0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"game\":\"Game_game__2M42Z\",\"game__info\":\"Game_game__info__1GzNe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"square\":\"Square_square__EjCiw\",\"current\":\"Square_current__3DqJy\",\"winning\":\"Square_winning__SY9kT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"steps__toggle\":\"Steps_steps__toggle__33qv5\",\"steps__list\":\"Steps_steps__list__3yv_q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board__grid\":\"Board_board__grid__1djK1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"Info_info__1dQHc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"Status_status__14LOl\"};","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import styles from \"./Square.module.css\";\r\n\r\nconst Square = props => {\r\n    const winning = props.isWinning ? \"winning\" : \"\";\r\n    const current = props.isCurrent ? \"current\" : \"\";\r\n\r\n    return (\r\n        <button\r\n                className={`${styles.square} ${styles[winning]} ${styles[current]}`}\r\n                onClick={props.onClick}>\r\n            {props.value}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Square;","import styles from \"./Board.module.css\";\r\nimport Square from \"./Square/Square\";\r\n\r\nconst Board = props => {\r\n    return (\r\n        <div className={styles.board}>\r\n            <div className={styles.board__grid}>\r\n                {props.squares.map((row, i) =>\r\n                    row.map((square, j) =>\r\n                        <Square\r\n                            isCurrent={props.currentCoord === `${i} ${j}`}\r\n                            isWinning={props.winningComb.has(`${i} ${j}`)}\r\n                            value={square}\r\n                            onClick={() => props.onClick(i, j)}\r\n                        />\r\n                    )\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Board;","import styles from \"./Steps.module.css\";\r\nimport {useState} from \"react\";\r\n\r\nconst Steps = (props) => {\r\n    const [isGrowth, setIsGrowth] = useState(false);\r\n\r\n    const moves = props.history.map((step, move) => {\r\n        const desc = move ? 'Go to move #' + move :\r\n            'Go to game start';\r\n        return (\r\n            <li>\r\n                <button onClick={() => props.jumpTo(move)}>{desc}</button>\r\n            </li>\r\n        );\r\n    });\r\n\r\n    if (isGrowth) {\r\n        moves.reverse();\r\n    }\r\n\r\n    function handleToggle() {\r\n        setIsGrowth(!isGrowth);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.steps}>\r\n            <div className={styles.steps__toggle}>\r\n                <button onClick={handleToggle}>Reverse</button>\r\n            </div>\r\n            <ul className={styles.steps__list}>{moves}</ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Steps;","import styles from \"./Status.module.css\";\r\n\r\nconst Status = props => {\r\n    return (\r\n        <div className={styles.status}>{props.status}</div>\r\n    );\r\n}\r\n\r\nexport default Status;","import styles from \"./Info.module.css\";\r\nimport Steps from \"./Steps/Steps\";\r\nimport Status from \"./Status/Status\";\r\n\r\nconst Info = props => {\r\n\r\n    return (\r\n        <div className={styles.info}>\r\n            <Status status={props.status}/>\r\n            <Steps\r\n                history={props.history}\r\n                jumpTo={props.jumpTo}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Info;","export function calculateWinner(squares, coord) {\r\n    if (!coord) {\r\n        return new Set();\r\n    }\r\n\r\n    const symbol = squares[coord.i][coord.j];\r\n    const winningComb = new Set();\r\n\r\n    //vertical\r\n    let verticalWinningComb = new Set();\r\n    for (let i = coord.i - 1; i >= 0; i--) {\r\n        if (squares[i][coord.j] !== symbol) break;\r\n        verticalWinningComb.add(`${i} ${coord.j}`);\r\n    }\r\n    for (let i = coord.i + 1; i < squares.length; i++) {\r\n        if (squares[i][coord.j] !== symbol) break;\r\n        verticalWinningComb.add(`${i} ${coord.j}`);\r\n    }\r\n\r\n    //horizontal\r\n    let horizontalWinningComb = new Set();\r\n    for (let j = coord.j - 1; j >= 0; j--) {\r\n        if (squares[coord.i][j] !== symbol) break;\r\n        horizontalWinningComb.add(`${coord.i} ${j}`);\r\n    }\r\n    for (let j = coord.j + 1; j < squares.length; j++) {\r\n        if (squares[coord.i][j] !== symbol) break;\r\n        horizontalWinningComb.add(`${coord.i} ${j}`);\r\n    }\r\n\r\n    //main diagonal\r\n    let mainDiagWinningComb = new Set();\r\n    let count = 1;\r\n    while (coord.i - count >= 0 && coord.j - count >= 0) {\r\n        let i = coord.i - count, j = coord.j - count;\r\n        if (squares[i][j] !== symbol) break;\r\n        mainDiagWinningComb.add(`${i} ${j}`);\r\n        ++count;\r\n    }\r\n    count = 1;\r\n    while (coord.i + count < squares.length &&\r\n    coord.j + count < squares.length) {\r\n        let i = coord.i + count, j = coord.j + count;\r\n        if (squares[i][j] !== symbol) break;\r\n        mainDiagWinningComb.add(`${i} ${j}`);\r\n        ++count;\r\n    }\r\n\r\n    //side diagonal\r\n    let sideDiagWinningComb = new Set();\r\n    count = 1;\r\n    while (coord.i - count >= 0 &&\r\n            coord.j + count < squares.length) {\r\n        let i = coord.i - count, j = coord.j + count;\r\n        if (squares[i][j] !== symbol) break;\r\n        sideDiagWinningComb.add(`${i} ${j}`);\r\n        ++count;\r\n    }\r\n    count = 1;\r\n    while (coord.i + count < squares.length &&\r\n            coord.j - count >= 0) {\r\n        let i = coord.i + count, j = coord.j - count;\r\n        if (squares[i][j] !== symbol) break;\r\n        sideDiagWinningComb.add(`${i} ${j}`);\r\n        ++count;\r\n    }\r\n\r\n    if (isFull(squares)) {\r\n        winningComb.add(\"full\");\r\n        return winningComb;\r\n    }\r\n\r\n    winningComb.add(`${coord.i} ${coord.j}`)\r\n\r\n    if (verticalWinningComb.size >= 4) {\r\n        concat(winningComb, verticalWinningComb);\r\n    } if (horizontalWinningComb.size >= 4) {\r\n        concat(winningComb, horizontalWinningComb);\r\n    } if (mainDiagWinningComb.size >= 4) {\r\n        concat(winningComb, mainDiagWinningComb);\r\n    } if (sideDiagWinningComb.size >= 4) {\r\n        concat(winningComb, sideDiagWinningComb);\r\n    }\r\n\r\n    if (winningComb.size == 1) {\r\n        return new Set();\r\n    }\r\n\r\n    return winningComb;\r\n\r\n}\r\n\r\nfunction isFull(squares) {\r\n    for (let i = 0; i < squares.length; i++) {\r\n        for (let j = 0; j < squares[i].length; j++) {\r\n            if (!squares[i][j]) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction concat(set1, set2) {\r\n    for (let el of set2) {\r\n        set1.add(el);\r\n    }\r\n}\r\n\r\nexport function findCurrentElement(currentSquares, prevSquares) {\r\n    if (currentSquares && prevSquares) {\r\n        for (let i = 0; i < currentSquares.length; i++) {\r\n            for (let j = 0; j < currentSquares[i].length; j++) {\r\n                if (currentSquares[i][j] !== prevSquares[i][j]) {\r\n                    return {i: i, j: j};\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}\r\n","import styles from \"./Game.module.css\";\r\nimport Board from \"./Board/Board\";\r\nimport {useState} from \"react\";\r\nimport Info from \"./Info/Info\";\r\nimport {calculateWinner, findCurrentElement} from \"../../utils/calculateWinner\";\r\n\r\nconst Game = () => {\r\n    const [history, setHistory] = useState([\r\n        {squares: Array(19).fill(Array(19).fill(null))}\r\n    ]);\r\n    const [numberStep, setNumberStep] = useState(0);\r\n\r\n    const current = history[numberStep];\r\n    const prev = history[numberStep - 1];\r\n    const coord = findCurrentElement(current.squares, prev?.squares);\r\n    const winningComb = calculateWinner(current.squares, coord);\r\n\r\n    let status;\r\n    if (winningComb.has(\"full\")) {\r\n        status = \"Draw\";\r\n    } else if (winningComb.size >= 5) {\r\n        status = 'Winner: ' + current.squares[coord.i][coord.j];\r\n    } else {\r\n        status = 'Next player: ' + (numberStep % 2 === 0 ? '🟢' : '🔴');\r\n    }\r\n\r\n    function handleClick(i, j) {\r\n        const newHistory = history.slice(0, numberStep + 1);\r\n        const current = newHistory[newHistory.length - 1];\r\n        const squares = current.squares.map(square => square.slice());\r\n\r\n        if (squares[i][j] || winningComb.size) {\r\n            return;\r\n        }\r\n        squares[i][j] = numberStep % 2 === 0 ? '🟢' : \"🔴\";\r\n\r\n        setHistory([...newHistory, {squares: squares}]);\r\n        setNumberStep(numberStep + 1);\r\n    }\r\n\r\n    function jumpTo(step) {\r\n        setNumberStep(step);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.game}>\r\n            <div className={styles.game__board}>\r\n                <Board currentCoord={`${coord?.i} ${coord?.j}`}\r\n                       winningComb={winningComb}\r\n                       squares={current.squares}\r\n                       onClick={(i, j) => handleClick(i, j)}/>\r\n            </div>\r\n            <div className={styles.game__info}>\r\n                <Info\r\n                    status={status}\r\n                    history={history}\r\n                    jumpTo={step => jumpTo(step)}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Game;","import logo from './logo.svg';\nimport './App.css';\nimport {useState} from \"react\";\nimport Game from \"./components/Game/Game\";\n\nfunction App() {\n    return (\n        <div className=\"app\">\n            <Game/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}