{"version":3,"sources":["components/Game/Info/Info.module.css","components/Game/Game.module.css","components/Game/Board/Square/Square.module.css","components/Game/Board/Board.module.css","logo.svg","components/Game/Board/Square/Square.jsx","components/Game/Board/Board.jsx","components/Game/Info/Info.jsx","components/Game/Game.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Square","props","winning","isWinning","current","isCurrent","className","styles","square","onClick","value","Board","board","board__grid","squares","map","row","i","j","currentCoord","winningComb","has","Info","info","info__status","status","info__toggle","info__steps","moves","findCurrentElement","currentSquares","prevSquares","length","calculateWinner","coord","symbol","Set","add","size","clear","count","isFull","Game","useState","Array","fill","history","setHistory","numberStep","setNumberStep","isGrowth","setIsGrowth","prev","step","move","desc","jumpTo","reverse","game","game__board","newHistory","slice","handleClick","game__info","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.914d4040.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"info__status\":\"Info_info__status__3_0-U\",\"info\":\"Info_info__1dQHc\",\"info__toggle\":\"Info_info__toggle__1E8oB\",\"info__steps\":\"Info_info__steps__15Gfx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"game\":\"Game_game__2M42Z\",\"game__info\":\"Game_game__info__1GzNe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"square\":\"Square_square__EjCiw\",\"current\":\"Square_current__3DqJy\",\"winning\":\"Square_winning__SY9kT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board__grid\":\"Board_board__grid__1djK1\"};","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import styles from \"./Square.module.css\";\r\n\r\nconst Square = props => {\r\n    const winning = props.isWinning ? \"winning\" : \"\";\r\n    const current = props.isCurrent ? \"current\" : \"\";\r\n    return (\r\n        <button\r\n                className={`${styles.square} ${styles[winning]} ${styles[current]}`}\r\n                onClick={props.onClick}>\r\n            {props.value}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Square;","import styles from \"./Board.module.css\";\r\nimport Square from \"./Square/Square\";\r\n\r\nconst Board = props => {\r\n    return (\r\n        <div className={styles.board}>\r\n            <div className={styles.board__grid}>\r\n                {props.squares.map((row, i) =>\r\n                    row.map((square, j) => {\r\n                        return <Square\r\n                            isCurrent={props.currentCoord === `${i} ${j}`}\r\n                            isWinning={props.winningComb.has(`${i} ${j}`)}\r\n                            value={square}\r\n                            onClick={() => props.onClick(i, j)}/>\r\n                    })\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction calculateWinner(squares, i, j) {\r\n    const symbol = \"X\";\r\n    let winningCombination = [{i, j}];\r\n\r\n    for (let ih = i - 1; ih >= 0; ih--) {\r\n        if (winningCombination.length === 5) {\r\n            return winningCombination;\r\n        }\r\n        if (squares[ih][j] === symbol) {\r\n            winningCombination.push({ih, j})\r\n        }\r\n    }\r\n    debugger;\r\n    return null;\r\n}\r\n\r\nexport default Board;","import styles from \"./Info.module.css\";\r\n\r\nconst Info = props => {\r\n    return (\r\n        <div className={styles.info}>\r\n            <div className={styles.info__status}>{props.status}</div>\r\n            <div className={styles.info__toggle}>\r\n                <button onClick={props.onClick}>Turn over</button>\r\n            </div>\r\n            <ul className={styles.info__steps}>{props.moves}</ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Info;","import styles from \"./Game.module.css\";\r\nimport Board from \"./Board/Board\";\r\nimport {useState} from \"react\";\r\nimport Info from \"./Info/Info\";\r\n\r\nconst Game = () => {\r\n\r\n    const [history, setHistory] = useState([\r\n        {squares: Array(19).fill(Array(19).fill(null))}\r\n    ]);\r\n    const [numberStep, setNumberStep] = useState(0);\r\n    const [isGrowth, setIsGrowth] = useState(false);\r\n\r\n    function handleClick(i, j) {\r\n        const newHistory = history.slice(0, numberStep + 1);\r\n        const current = newHistory[newHistory.length - 1];\r\n        const squares = current.squares.map(square => square.slice());\r\n\r\n        const prev = newHistory[newHistory.length - 2];\r\n        const coord = findCurrentElement(squares, prev?.squares);\r\n        let winningComb = new Set();\r\n\r\n        if (coord) {\r\n            winningComb = calculateWinner(current.squares, coord);\r\n        }\r\n        if (squares[i][j] || winningComb.size) {\r\n            return;\r\n        }\r\n        squares[i][j] = numberStep % 2 === 0 ? 'X' : 'O';\r\n\r\n        setHistory([...newHistory, {squares: squares}]);\r\n        setNumberStep(numberStep + 1);\r\n    }\r\n\r\n    function jumpTo(step) {\r\n        setNumberStep(step);\r\n    }\r\n\r\n    const current = history[numberStep];\r\n    const prev = history[numberStep - 1];\r\n    const coord = findCurrentElement(current.squares, prev?.squares);\r\n\r\n    let status = \"Next player: X\";\r\n\r\n    let winningComb = new Set();\r\n    if (coord) {\r\n        winningComb = calculateWinner(current.squares, coord);\r\n        if (winningComb.has(\"full\")) {\r\n            status = \"Draw\";\r\n        } else if (winningComb.size == 5) {\r\n            status = 'Winner: ' + current.squares[coord.i][coord.j];\r\n        } else {\r\n            status = 'Next player: ' + (numberStep % 2 === 0 ? 'X' : 'O');\r\n        }\r\n    }\r\n\r\n    const moves = history.map((step, move) => {\r\n        const desc = move ? 'Go to move #' + move :\r\n            'Go to game start';\r\n        return (\r\n            <li>\r\n                <button onClick={() => jumpTo(move)}>{desc}</button>\r\n            </li>\r\n        );\r\n    });\r\n\r\n    if (!isGrowth) {\r\n        moves.reverse();\r\n    }\r\n\r\n    function handleToggle() {\r\n        setIsGrowth(!isGrowth);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.game}>\r\n            <div className={styles.game__board}>\r\n                <Board currentCoord={`${coord?.i} ${coord?.j}`}\r\n                       winningComb={winningComb}\r\n                       squares={current.squares}\r\n                       onClick={(i, j) => handleClick(i, j)}/>\r\n            </div>\r\n            <div className={styles.game__info}>\r\n                <Info\r\n                    status={status}\r\n                    onClick={() => handleToggle()}\r\n                    moves={moves}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction findCurrentElement(currentSquares, prevSquares) {\r\n    if (currentSquares && prevSquares) {\r\n        for (let i = 0; i < currentSquares.length; i++) {\r\n            for (let j = 0; j < currentSquares[i].length; j++) {\r\n                if (currentSquares[i][j] !== prevSquares[i][j]) {\r\n                    return {i: i, j: j};\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction calculateWinner(squares, coord) {\r\n    const symbol = squares[coord.i][coord.j];\r\n\r\n    //vertical\r\n    let winningComb = new Set();\r\n    winningComb.add(`${coord.i} ${coord.j}`);\r\n    for (let i = coord.i - 1; i >= 0; i--) {\r\n        if (squares[i][coord.j] !== symbol) break;\r\n        winningComb.add(`${i} ${coord.j}`);\r\n        if (winningComb.size == 5) return winningComb;\r\n    }\r\n    for (let i = coord.i + 1; i < squares.length; i++) {\r\n        if (squares[i][coord.j] !== symbol) break;\r\n        winningComb.add(`${i} ${coord.j}`);\r\n        if (winningComb.size == 5) return winningComb;\r\n    }\r\n\r\n    //horizontal\r\n    winningComb.clear();\r\n    winningComb.add(`${coord.i} ${coord.j}`);\r\n    for (let j = coord.j - 1; j >= 0; j--) {\r\n        if (squares[coord.i][j] !== symbol) break;\r\n        winningComb.add(`${coord.i} ${j}`);\r\n        if (winningComb.size == 5) return winningComb;\r\n    }\r\n    for (let j = coord.j + 1; j < squares.length; j++) {\r\n        if (squares[coord.i][j] !== symbol) break;\r\n        winningComb.add(`${coord.i} ${j}`);\r\n        if (winningComb.size == 5) return winningComb;\r\n    }\r\n\r\n    //main diagonal\r\n    winningComb.clear();\r\n    winningComb.add(`${coord.i} ${coord.j}`);\r\n    let count = 1;\r\n    while (coord.i - count >= 0 && coord.j - count >= 0) {\r\n        let i = coord.i - count, j = coord.j - count;\r\n        if (squares[i][j] !== symbol) break;\r\n        winningComb.add(`${i} ${j}`);\r\n        if (winningComb.size == 5) return winningComb;\r\n        ++count;\r\n    }\r\n    count = 1;\r\n    while (coord.i + count < squares.length &&\r\n           coord.j + count < squares.length) {\r\n        let i = coord.i + count, j = coord.j + count;\r\n        if (squares[i][j] !== symbol) break;\r\n        winningComb.add(`${i} ${j}`);\r\n        if (winningComb.size == 5) return winningComb;\r\n        ++count;\r\n    }\r\n\r\n    //side diagonal\r\n    winningComb.clear();\r\n    winningComb.add(`${coord.i} ${coord.j}`);\r\n    count = 1;\r\n    while (coord.i - count >= 0 &&\r\n           coord.j + count < squares.length) {\r\n        let i = coord.i - count, j = coord.j + count;\r\n        if (squares[i][j] !== symbol) break;\r\n        winningComb.add(`${i} ${j}`);\r\n        if (winningComb.size == 5) return winningComb;\r\n        ++count;\r\n    }\r\n    count = 1;\r\n    while (coord.i + count < squares.length &&\r\n           coord.j - count >= 0) {\r\n        let i = coord.i + count, j = coord.j - count;\r\n        if (squares[i][j] !== symbol) break;\r\n        winningComb.add(`${i} ${j}`);\r\n        if (winningComb.size == 5) return winningComb;\r\n        ++count;\r\n    }\r\n\r\n    if (isFull(squares)) {\r\n        winningComb.clear();\r\n        winningComb.add(\"full\");\r\n        return winningComb;\r\n    }\r\n\r\n    return new Set();\r\n}\r\n\r\nfunction isFull(squares) {\r\n    for (let i = 0; i < squares.length; i++) {\r\n        for (let j = 0; j < squares[i].length; j++) {\r\n            if (!squares[i][j]) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport default Game;","import logo from './logo.svg';\nimport './App.css';\nimport {useState} from \"react\";\nimport Game from \"./components/Game/Game\";\n\nfunction App() {\n    return (\n        <div className=\"app\">\n            <Game/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}