{"version":3,"sources":["constants.js","api/utisl.js","api/userApi/index.js","components/Users/constants.js","components/Users/UsersTable/Actions/index.jsx","components/Users/UserForm/converter.js","components/Users/UsersTable/index.jsx","common/Formik/Input/index.jsx","components/Users/UserForm/FormContainer/Buttons/index.jsx","common/Formik/Select/index.jsx","components/Users/UserForm/FormContainer/index.jsx","components/Users/UserForm/index.jsx","components/NotFound/index.jsx","components/Users/index.jsx","components/Sidebar/index.jsx","api/planetApi/index.js","components/Planets/constans.js","components/Planets/PlanetsTable/Actions/index.jsx","components/Planets/PlanetsTable/index.jsx","components/Planets/PlanetForm/FormContainer/Buttons/index.jsx","components/Planets/PlanetForm/FormContainer/Checkbox/index.jsx","components/Planets/PlanetForm/FormContainer/index.jsx","components/Planets/PlanetForm/index.jsx","components/Planets/PlanetForm/converter.js","components/Planets/index.jsx","components/App/index.jsx","components/Root/index.jsx","index.js"],"names":["MODE","wait","ms","Promise","resolve","setTimeout","createGetId","initialId","getTimestamp","Date","now","throwError","id","Error","getId","data","length","api","getUsers","console","log","getUser","user","find","u","createUser","newUser","timestamp","push","editUser","index","findIndex","deleteUser","splice","getRoles","ROLES","USERNAME","ROLE","AGE","INITIAL_STATE","Actions","url","useRouteMatch","history","useHistory","redirect","mode","className","onClick","numberParse","str","String","padStart","getDate","millisecond","date","getFullYear","getMonth","getHours","getMinutes","UsersTable","users","setUsers","useEffect","userApi","then","to","map","Input","name","label","validate","type","disabled","required","checked","useField","value","field","component","Buttons","useFormikContext","values","isSubmitting","a","payload","window","alert","message","Select","options","option","FormContainer","initialValues","onSubmit","roles","role","UserForm","useParams","Number","prevUsers","catch","err","useState","setRoles","handleSubmit","error","getInitialValues","NotFound","Users","path","exact","Sidebar","activeClassName","getPlanets","getPlanet","planet","pl","createPlanet","newPlanet","editPlanet","deletePlanet","NAME","TEMPERATURE","ISWATER","PlanetsTable","planets","setPlanets","Checkbox","PlanetForm","planetApi","temperature","Planets","App","from","Root","children","basename","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.90b3e098.chunk.js","sourcesContent":["export const MODE = {\r\n  VIEW: 'view',\r\n  CREATE: 'create',\r\n  EDIT: 'edit',\r\n  CLONE: 'clone',\r\n  DELETE: 'delete'\r\n};\r\n","export const wait = (ms = 800) =>\r\n  new Promise(resolve => {\r\n    setTimeout(resolve, ms);\r\n  });\r\n\r\nexport const createGetId = initialId => () => ++initialId;\r\n\r\nexport const getTimestamp = () => Date.now();\r\n\r\nexport const throwError = id => {\r\n  throw new Error(`Record with ID ${id} does not exist`);\r\n};\r\n","import { wait, createGetId, getTimestamp, throwError } from '../utisl';\r\nimport data from './db';\r\n\r\nconst getId = createGetId(data.length);\r\n\r\nconst api = {\r\n  // GET /users\r\n  async getUsers() {\r\n    await wait(1000);\r\n\r\n    console.log('GET /users', data);\r\n    return data;\r\n  },\r\n  // GET /users/:id\r\n  async getUser(id) {\r\n    await wait();\r\n\r\n    const user = data.find(u => u.id === id);\r\n\r\n    if (user) {\r\n      console.log(`GET /users/${user.id}`, user);\r\n      return user;\r\n    } else {\r\n      throwError(id);\r\n    }\r\n  },\r\n  // POST /users\r\n  async createUser(user) {\r\n    await wait();\r\n\r\n    const newUser = {\r\n      ...user,\r\n      id: getId(),\r\n      timestamp: getTimestamp(),\r\n    };\r\n\r\n    data.push(newUser);\r\n\r\n    console.log('POST /users', newUser);\r\n    return newUser;\r\n  },\r\n  // PUT /users\r\n  async editUser(user) {\r\n    await wait();\r\n\r\n    const index = data.findIndex(u => u.id === user.id);\r\n\r\n    if (~index) {\r\n      data[index] = {\r\n        ...user,\r\n        timestamp: getTimestamp(),\r\n      };\r\n\r\n      console.log('PUT /users', data[index]);\r\n      return data[index];\r\n    } else {\r\n      throwError(user.id);\r\n    }\r\n  },\r\n  // DELETE /users\r\n  async deleteUser(user) {\r\n    await wait();\r\n\r\n    const index = data.findIndex(u => u.id === user.id);\r\n\r\n    if (~index) {\r\n      console.log('DELETE /users', user);\r\n      return data.splice(index, 1);\r\n    } else {\r\n      throwError(user.id);\r\n    }\r\n  },\r\n  // GET /roles\r\n  async getRoles() {\r\n    await wait();\r\n    const ROLES = ['user', 'super-user', 'admin'];\r\n\r\n    console.log('GET /roles', ROLES);\r\n    return ROLES;\r\n  },\r\n};\r\n\r\nexport default api;\r\n","export const ID = 'id';\r\nexport const USERNAME = 'username';\r\nexport const ROLE = 'role';\r\nexport const TIMESTAMP = 'timestamp';\r\nexport const AGE = 'age';\r\n\r\nexport const INITIAL_STATE = {\r\n  [USERNAME]: '',\r\n  [AGE]: 0,\r\n  [ROLE]: '',\r\n};\r\n","import {useRouteMatch, useHistory} from 'react-router-dom';\r\n\r\nimport {MODE} from '../../../../constants';\r\n\r\nfunction Actions({id}) {\r\n    const {url} = useRouteMatch();\r\n    const history = useHistory();\r\n\r\n    const redirect = mode => () => {\r\n        history.push(`${url}/user/${mode}/${id}`);\r\n    };\r\n\r\n    return (\r\n        <div className=\"Actions\">\r\n            <button onClick={redirect(MODE.VIEW)}>View</button>\r\n            {' '}\r\n            <button onClick={redirect(MODE.EDIT)}>Edit</button>\r\n            {' '}\r\n            <button onClick={redirect(MODE.CLONE)}>Clone</button>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Actions;\r\n","import { INITIAL_STATE } from '../constants';\r\n\r\nexport const getInitialValues = user => (user ? ({\r\n    ...user,\r\n    // age: +user.age\r\n}) : INITIAL_STATE);\r\n\r\nexport const getRequestPayload = values => values;\r\n\r\nfunction numberParse(str) {\r\n    str = String(str);\r\n    return str.padStart(2, \"0\");\r\n}\r\n\r\nexport const getDate = millisecond => {\r\n    const date = new Date(millisecond);\r\n    return `${date.getFullYear()}-${numberParse(date.getMonth() + 1)}-${numberParse(date.getDate())} ${numberParse(date.getHours())}:${numberParse(date.getMinutes())}`\r\n}\r\n","import { useEffect } from 'react';\r\nimport { useRouteMatch, Link } from 'react-router-dom';\r\n\r\nimport userApi from '../../../api/userApi';\r\nimport { MODE } from '../../../constants';\r\nimport {ID, USERNAME, ROLE, TIMESTAMP, AGE} from '../constants';\r\nimport Actions from './Actions';\r\nimport './index.scss';\r\nimport {getDate} from \"../UserForm/converter\";\r\n\r\nfunction UsersTable({ users, setUsers }) {\r\n  const { url } = useRouteMatch();\r\n  useEffect(() => {\r\n    userApi.getUsers().then(setUsers);\r\n  }, [setUsers]);\r\n\r\n  return (\r\n    <div className=\"UsersTable\">\r\n      <Link to={`${url}/user/${MODE.CREATE}`}>Create User</Link>\r\n\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Username</th>\r\n            <th>Age</th>\r\n            <th>Role</th>\r\n            <th>Last Updated At</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users.map(user => (\r\n            <tr key={user[ID]}>\r\n              <td>{user[ID]}</td>\r\n              <td>{user[USERNAME]}</td>\r\n              <td>{user[AGE]}</td>\r\n              <td>{user[ROLE]}</td>\r\n              <td>{getDate(user[TIMESTAMP])}</td>\r\n              <td>\r\n                <Actions id={user[ID]} />\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UsersTable;\r\n","import {useField, ErrorMessage} from 'formik';\r\nimport './styles.scss';\r\n\r\nfunction Input({name, label, validate, type = 'text', disabled = false, required, checked = false}) {\r\n\r\n    const validateInput = value => {\r\n        if (required && value === \"\") {\r\n            return \"Required\";\r\n        } if (typeof validate === \"function\") {\r\n            return validate(value);\r\n        }\r\n    }\r\n\r\n    const [field] = useField({name, validate: validateInput});\r\n    return (\r\n        <div className=\"Input\">\r\n            <label>\r\n                <div>{label}{required && \"*\"}</div>\r\n                <input type={type} disabled={disabled} {...field} checked={checked}/>\r\n            </label>\r\n\r\n            <ErrorMessage name={name} className=\"error\" component=\"div\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Input;\r\n","import {useHistory} from 'react-router-dom';\r\nimport {useFormikContext} from 'formik';\r\n\r\nimport {MODE} from '../../../../../constants';\r\nimport api from \"../../../../../api/userApi\";\r\nimport {getRequestPayload} from \"../../converter\";\r\n\r\nfunction Buttons({mode}) {\r\n    const history = useHistory();\r\n    const {values, isSubmitting} = useFormikContext();\r\n\r\n    return (\r\n        <div>\r\n            {(mode === MODE.CREATE || mode === MODE.EDIT || mode === MODE.CLONE) && (\r\n                <button type=\"submit\" disabled={isSubmitting}>\r\n                    Save\r\n                </button>\r\n            )}\r\n            {(mode === MODE.EDIT && (\r\n                <button type=\"reset\" onClick={async () => {\r\n                    try {\r\n                        const payload = getRequestPayload(values);\r\n                        await api.deleteUser(payload);\r\n                    } catch (err) {\r\n                        window.alert(err.message);\r\n                    }\r\n\r\n                    history.push('/users')\r\n                }}>\r\n                    Delete\r\n                </button>\r\n            ))}\r\n            <button type=\"button\" onClick={() => history.push('/users')}>\r\n                Cancel\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Buttons;\r\n","import {ErrorMessage, useField} from \"formik\";\r\n\r\n\r\nfunction Select({ label, name, disabled, validate, options, required }) {\r\n\r\n    const validateInput = value => {\r\n        if (required && value === \"\") {\r\n            return \"Required\";\r\n        } if (typeof validate === \"function\") {\r\n            return validate(value);\r\n        }\r\n    }\r\n\r\n    const [field] = useField({name, validate: validateInput});\r\n    return (\r\n        <div className=\"Select\">\r\n            <label>\r\n                <div>{label}{required && \"*\"}</div>\r\n                <select disabled={disabled} {...field}>\r\n                    {options.map((option, index) => (<option key={index} label={option.label}>{option.value}</option>))}\r\n                </select>\r\n            </label>\r\n            <ErrorMessage name={name} className=\"error\" component=\"div\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Select;","import { Formik, Form } from 'formik';\r\n\r\nimport Input from '../../../../common/Formik/Input';\r\nimport { MODE } from '../../../../constants';\r\nimport { AGE, ROLE, USERNAME } from '../../constants';\r\nimport Buttons from './Buttons';\r\nimport Select from '../../../../common/Formik/Select';\r\n\r\nfunction FormContainer({ initialValues, onSubmit, mode, roles }) {\r\n  return (\r\n    <Formik initialValues={initialValues} onSubmit={onSubmit}>\r\n      <Form>\r\n        <Input name={USERNAME} label='Username' disabled={mode === MODE.VIEW} required={true} />\r\n        <Input\r\n          name={AGE}\r\n          type='number'\r\n          label='Age'\r\n          disabled={mode === MODE.VIEW}\r\n          required={true}\r\n          validate={value => {\r\n            if (value < 16 || value > 110) {\r\n              return `Age is not appropriate`;\r\n            }\r\n          }}\r\n        />\r\n        <Select\r\n          label='Role'\r\n          name={ROLE}\r\n          disabled={mode === MODE.VIEW}\r\n          options={roles.map(role => ({ label: role, value: role }))}\r\n        />\r\n        <br />\r\n        <Buttons mode={mode} />\r\n      </Form>\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default FormContainer;\r\n","import {useEffect, useState} from 'react';\r\nimport {useParams, useHistory} from 'react-router-dom';\r\n\r\nimport userApi from '../../../api/userApi';\r\nimport {MODE} from '../../../constants';\r\nimport {ID} from '../constants';\r\nimport FormContainer from './FormContainer';\r\nimport {getInitialValues, getRequestPayload} from './converter';\r\n\r\nfunction UserForm({users, setUsers}) {\r\n    const {mode, id} = useParams();\r\n    const history = useHistory();\r\n    const user = users.find(user => user.id === Number(id));\r\n\r\n    useEffect(() => {\r\n        if (mode === MODE.VIEW || mode === MODE.EDIT || mode === MODE.CLONE) {\r\n            if (!user) {\r\n                userApi\r\n                    .getUser(Number(id))\r\n                    .then(user => setUsers(prevUsers => [...prevUsers, user]))\r\n                    .catch(err => window.alert(err.message));\r\n            }\r\n        }\r\n    }, [id, mode, user, setUsers]);\r\n\r\n    const [roles, setRoles] = useState([]);\r\n    useEffect(() => {\r\n        userApi.getRoles().then(setRoles);\r\n    }, [setUsers]);\r\n\r\n    const handleSubmit = async values => {\r\n        try {\r\n            debugger;\r\n            const payload = getRequestPayload(values);\r\n\r\n            switch (mode) {\r\n                case MODE.CREATE:\r\n                case MODE.CLONE:\r\n                    await userApi.createUser(payload);\r\n                    break;\r\n                case MODE.EDIT:\r\n                    await userApi.editUser(payload);\r\n                    break;\r\n                default:\r\n                    console.error(`Failed to execute this request for ${mode} mode`);\r\n            }\r\n        } catch (err) {\r\n            window.alert(err.message);\r\n        }\r\n\r\n        history.push('/users');\r\n    };\r\n\r\n    const initialValues = getInitialValues(user);\r\n\r\n    return (\r\n        <FormContainer\r\n            key={`${mode}:${initialValues[ID]}`}\r\n            initialValues={initialValues}\r\n            onSubmit={handleSubmit}\r\n            mode={mode}\r\n            roles={roles}\r\n        />\r\n    );\r\n}\r\n\r\nexport default UserForm;\r\n","import \"./styles.css\";\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <div className=\"NotFound\">\r\n      <h1>Not Found</h1>\r\n      <p>404</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;","import { useState } from 'react';\r\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\r\n\r\nimport { MODE } from '../../constants';\r\nimport UsersTable from './UsersTable';\r\nimport UserForm from './UserForm';\r\nimport NotFound from '../NotFound';\r\n\r\nfunction Users() {\r\n  const { path } = useRouteMatch();\r\n  const [users, setUsers] = useState([]);\r\n  return (\r\n    <div className=\"users\">\r\n      <Switch>\r\n        <Route exact path={path}>\r\n          <UsersTable users={users} setUsers={setUsers} />\r\n        </Route>\r\n\r\n        <Route exact path={`${path}/user/:mode(${MODE.VIEW}|${MODE.CREATE}|${MODE.EDIT}|${MODE.CLONE})/:id?`}>\r\n          <UserForm users={users} setUsers={setUsers} />\r\n        </Route>\r\n        <Route>\r\n          <NotFound/>\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Users;\r\n","import {NavLink} from \"react-router-dom\";\r\nimport \"./styles.css\";\r\n\r\nfunction Sidebar() {\r\n\r\n    return (\r\n        <nav className=\"Sidebar\">\r\n            <ul>\r\n                <li><NavLink className=\"Item\" activeClassName=\"Active\" to=\"/users\">Users</NavLink></li>\r\n                <li><NavLink className=\"Item\" activeClassName=\"Active\" to=\"/planets\">Planets</NavLink></li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import data from \"./db\"\r\nimport { createGetId, getTimestamp, throwError, wait } from '../utisl';\r\n\r\nconst getId = createGetId(data.length);\r\n\r\nconst api = {\r\n    // GET planets\r\n    async getPlanets() {\r\n        await wait(1000);\r\n        console.log(\"GET /products\", data);\r\n        return data;\r\n    },\r\n    // GET planet\r\n    async getPlanet(id) {\r\n        await wait(1000);\r\n\r\n        const planet = data.find(pl => pl.id === id);\r\n\r\n        if (planet) {\r\n            console.log(`GET /users/${planet.id}`, planet);\r\n            return planet;\r\n        } else {\r\n            throwError(id);\r\n        }\r\n    },\r\n    // POST /planets\r\n    async createPlanet(planet) {\r\n        await wait();\r\n\r\n        const newPlanet = {\r\n            ...planet,\r\n            id: getId(),\r\n            timestamp: getTimestamp(),\r\n        };\r\n\r\n        data.push(newPlanet);\r\n\r\n        console.log('POST /planets', newPlanet);\r\n        return newPlanet;\r\n    },\r\n    async editPlanet(planet) {\r\n        await wait();\r\n        const index = data.findIndex(pl => pl.id === planet.id);\r\n\r\n        if (~index) {\r\n            data[index] = {\r\n                ...planet,\r\n                timestamp: getTimestamp(),\r\n            };\r\n\r\n            console.log('PUT /planets', data[index]);\r\n            return data[index];\r\n        } else {\r\n            throwError(planet.id);\r\n        }\r\n    },\r\n    async deletePlanet(planet) {\r\n        await wait();\r\n\r\n        const index = data.findIndex(pl => pl.id === planet.id);\r\n\r\n        if (~index) {\r\n            console.log('DELETE /planets', planet);\r\n            return data.splice(index, 1);\r\n        } else {\r\n            throwError(planet.id);\r\n        }\r\n    }\r\n}\r\n\r\nexport default api;\r\n","export const ID = 'id';\r\nexport const NAME = 'name';\r\nexport const TEMPERATURE = 'temperature';\r\nexport const TIMESTAMP = 'timestamp';\r\nexport const ISWATER = \"isWater\";\r\n\r\nexport const INITIAL_STATE = {\r\n    [NAME]: '',\r\n    [TEMPERATURE]: '',\r\n    [ISWATER]: false,\r\n};\r\n","import {useRouteMatch, useHistory} from 'react-router-dom';\r\n\r\nimport {MODE} from '../../../../constants';\r\n\r\nfunction Actions({id}) {\r\n  const {url} = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  const redirect = mode => () => {\r\n    history.push(`${url}/planet/${mode}/${id}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"Actions\">\r\n      <button onClick={redirect(MODE.VIEW)}>View</button>\r\n      {' '}\r\n      <button onClick={redirect(MODE.EDIT)}>Edit</button>\r\n      {' '}\r\n      <button onClick={redirect(MODE.CLONE)}>Clone</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Actions;\r\n","import {Link, useRouteMatch} from \"react-router-dom\";\r\nimport {useEffect} from \"react\";\r\nimport api from \"../../../api/planetApi\";\r\nimport {MODE} from \"../../../constants\";\r\nimport {getDate} from \"../../Users/UserForm/converter\";\r\nimport {ID, ISWATER, NAME, TEMPERATURE, TIMESTAMP} from \"../constans\";\r\nimport Actions from './Actions';\r\nimport \"./styles.css\"\r\n\r\nfunction PlanetsTable({planets, setPlanets}) {\r\n    const {url} = useRouteMatch();\r\n    useEffect(() => {\r\n        api.getPlanets().then(setPlanets);\r\n    }, [setPlanets]);\r\n    return (\r\n        <div className=\"ProductsTable\">\r\n            <Link to={`${url}/planet/${MODE.CREATE}`}>Create product</Link>\r\n\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>ID</th>\r\n                    <th>Name</th>\r\n                    <th>Temperature</th>\r\n                    <th>IsWater</th>\r\n                    <th>Last Updated At</th>\r\n                    <th>Actions</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {planets.map(planet => (\r\n                    <tr key={planet[ID]}>\r\n                        <td>{planet[ID]}</td>\r\n                        <td>{planet[NAME]}</td>\r\n                        <td>{planet[TEMPERATURE]}</td>\r\n                        <td>{Number(planet[ISWATER])}</td>\r\n                        <td>{getDate(planet[TIMESTAMP])}</td>\r\n                        <td>\r\n                            <Actions id={planet[ID]}/>\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PlanetsTable;\r\n","import { useHistory } from 'react-router-dom';\r\nimport { useFormikContext } from 'formik';\r\nimport { MODE } from '../../../../../constants';\r\nimport api from '../../../../../api/planetApi';\r\nimport { getRequestPayload } from '../../../../Users/UserForm/converter';\r\n\r\nfunction Buttons({mode}) {\r\n  const history = useHistory();\r\n  const {values, isSubmitting} = useFormikContext();\r\n\r\n  return (\r\n    <div>\r\n      {(mode === MODE.CREATE || mode === MODE.EDIT || mode === MODE.CLONE) && (\r\n        <button type=\"submit\" disabled={isSubmitting}>\r\n          Save\r\n        </button>\r\n      )}\r\n      {(mode === MODE.EDIT && (\r\n        <button type=\"reset\" onClick={async () => {\r\n          try {\r\n            const payload = getRequestPayload(values);\r\n            await api.deletePlanet(payload);\r\n          } catch (err) {\r\n            window.alert(err.message);\r\n          }\r\n          history.push('/planets')\r\n        }}>\r\n          Delete\r\n        </button>\r\n      ))}\r\n      <button type=\"button\" onClick={() => history.push('/planets')}>\r\n        Cancel\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Buttons;","import {Field, ErrorMessage} from 'formik';\r\nimport \"./styles.css\"\r\n\r\nfunction Checkbox({name, label, validate, disabled}) {\r\n  return (\r\n    <div className=\"Checkbox\">\r\n      <label>\r\n        <span>{label}</span>{\" \"}\r\n        <Field type=\"checkbox\" name={name} validate={validate} disabled={disabled}/>\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Checkbox;","import { Formik, Form } from 'formik';\r\nimport Input from '../../../../common/Formik/Input';\r\nimport { MODE } from '../../../../constants';\r\nimport { NAME, TEMPERATURE, ISWATER } from '../../constans';\r\nimport Buttons from './Buttons';\r\nimport Checkbox from './Checkbox';\r\n\r\nfunction FormContainer({initialValues, onSubmit, mode}) {\r\n  return (\r\n    <Formik initialValues={initialValues} onSubmit={onSubmit}>\r\n      <Form>\r\n        <Input name={NAME} label='Name' disabled={mode === MODE.VIEW} required={true}/>\r\n        <Input name={TEMPERATURE} type=\"number\" label={\"Temperature\"} disabled={mode === MODE.VIEW} required={true}/>\r\n        <Checkbox\r\n          name={ISWATER}\r\n          label='IsWater'\r\n          disabled={mode === MODE.VIEW}\r\n        />\r\n        <br/>\r\n        <Buttons mode={mode}/>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default FormContainer;","import { useHistory, useParams } from 'react-router-dom';\r\nimport { MODE } from '../../../constants';\r\nimport { useEffect } from 'react';\r\nimport planetApi from '../../../api/planetApi';\r\nimport { getRequestPayload } from '../../Users/UserForm/converter';\r\nimport { getInitialValues } from './converter';\r\nimport FormContainer from './FormContainer';\r\nimport { ID } from '../../Users/constants';\r\n\r\nfunction PlanetForm({ planets, setPlanets }) {\r\n\r\n  const { mode, id } = useParams();\r\n  const history = useHistory();\r\n  const planet = planets.find(pl => pl.id === Number(id));\r\n\r\n  useEffect(() => {\r\n    if (mode === MODE.VIEW || mode === MODE.EDIT || mode === MODE.CLONE) {\r\n      if (!planet) {\r\n        planetApi\r\n          .getPlanet(Number(id))\r\n          .then(planet => setPlanets(prevUsers => [...prevUsers, planet]))\r\n          .catch(err => window.alert(err.message));\r\n      }\r\n    }\r\n  }, [id, mode, planet, setPlanets]);\r\n\r\n  const handleSubmit = async values => {\r\n    try {\r\n      const payload = getRequestPayload(values);\r\n      console.log(values);\r\n      switch (mode) {\r\n        case MODE.CREATE:\r\n        case MODE.CLONE:\r\n          await planetApi.createPlanet(payload);\r\n          break;\r\n        case MODE.EDIT:\r\n          await planetApi.editPlanet(payload);\r\n          break;\r\n        default:\r\n          console.error(`Failed to execute this request for ${mode} mode`);\r\n      }\r\n\r\n    } catch (err) {\r\n      window.alert(err.message);\r\n    }\r\n    history.push(\"/planets\");\r\n  };\r\n\r\n  const initialValues = getInitialValues(planet);\r\n\r\n  return (\r\n    <FormContainer\r\n      key={`${mode}:${initialValues[ID]}`}\r\n      initialValues={initialValues}\r\n      onSubmit={handleSubmit}\r\n      mode={mode}\r\n    />\r\n  );\r\n}\r\n\r\nexport default PlanetForm;","import { INITIAL_STATE } from '../constans';\r\n\r\n\r\nexport const getInitialValues = planet => (planet ? ({\r\n  ...planet,\r\n  temperature: +planet.temperature\r\n}) : INITIAL_STATE);","import {Route, Switch, useRouteMatch} from \"react-router-dom\";\r\nimport {useState} from \"react\";\r\nimport PlanetsTable from \"./PlanetsTable\";\r\nimport { MODE } from '../../constants';\r\nimport PlanetForm from './PlanetForm';\r\nimport NotFound from '../NotFound';\r\n\r\nfunction Planets() {\r\n    const { path } = useRouteMatch();\r\n    const [planets, setPlanets] = useState([]);\r\n\r\n    return (\r\n        <div className=\"products\">\r\n            <Switch>\r\n                <Route exact path={path}>\r\n                    <PlanetsTable planets={planets} setPlanets={setPlanets}/>\r\n                </Route>\r\n              <Route exact path={`${path}/planet/:mode(${MODE.VIEW}|${MODE.CREATE}|${MODE.EDIT}|${MODE.CLONE})/:id?`}>\r\n                <PlanetForm planets={planets} setPlanets={setPlanets} />\r\n              </Route>\r\n              <Route>\r\n                <NotFound/>\r\n              </Route>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Planets;","import { Switch, Redirect, Route } from 'react-router-dom';\r\nimport './App.css';\r\nimport Users from '../Users';\r\nimport Sidebar from '../Sidebar';\r\nimport Products from '../Planets';\r\nimport NotFound from '../NotFound';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='App'>\r\n      <Sidebar />\r\n      <div className='content'>\r\n        <Switch>\r\n          <Redirect exact from='/' to='/users' />\r\n\r\n          <Route path='/users'>\r\n            <Users />\r\n          </Route>\r\n          <Route path='/planets'>\r\n            <Products />\r\n          </Route>\r\n          <Route>\r\n            <NotFound/>\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nfunction Root({ children }) {\r\n  return (\r\n    <Router basename=\"/globallogic-js-basecamp-2021/react/03-react-router-formik/build\">\r\n      {children}\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Root;\r\n","import { StrictMode } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\nimport Root from './components/Root';\r\nimport './styles.css';\r\n\r\nconst rootElement = document.getElementById('root');\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <Root>\r\n      <App />\r\n    </Root>\r\n  </StrictMode>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}